{"version":3,"sources":["components/TodoItem.tsx","components/AddTodo.tsx","API.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Todo","todo","updateTodo","deleteTodo","useState","status","checked","setchecked","Grid","container","spacing","item","xs","Typography","component","style","fontWeight","fontFamily","fontSize","textDecoration","name","description","padding","display","alignItems","Button","onClick","_id","AddTodo","saveTodo","formData","setFormData","handleForm","e","currentTarget","id","value","onSubmit","textAlign","Input","fullWidth","placeholder","type","required","onChange","variant","disabled","undefined","baseUrl","getTodos","a","axios","get","todos","Error","addTodo","post","todoUpdate","put","updatedTodo","delete","deletedTodo","App","setTodos","useEffect","fetchTodos","then","data","catch","err","console","log","handleUpdateTodo","handleDeleteTodo","className","Container","maxWidth","position","top","left","transform","boxShadow","paddingTop","paddingBottom","preventDefault","map","TodoItem","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.95ba1a2e.chunk.js","sourcesContent":["import { Button, Grid, Typography } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\n\r\ntype Props = TodoProps & {\r\n  updateTodo: (todo: ITodo) => void;\r\n  deleteTodo: (_id: string) => void;\r\n};\r\n\r\nconst Todo: React.FC<Props> = ({ todo, updateTodo, deleteTodo }) => {\r\n  const [checked, setchecked] = useState(todo.status);\r\n\r\n  return (\r\n    <Grid container spacing={2}>\r\n      <Grid item xs={6}>\r\n        <Typography\r\n          component=\"h1\"\r\n          style={{\r\n            fontWeight: \"bold\",\r\n            fontFamily: \"Serif\",\r\n            fontSize: \"20px\",\r\n            textDecoration: checked ? \"line-through\" : \"\",\r\n          }}\r\n        >\r\n          {todo.name}\r\n        </Typography>\r\n        <Typography\r\n          component=\"h2\"\r\n          style={{\r\n            fontFamily: \"Serif\",\r\n            fontSize: \"15px\",\r\n          }}\r\n        >\r\n          {todo.description}\r\n        </Typography>\r\n      </Grid>\r\n      <Grid\r\n        item\r\n        xs={6}\r\n        style={{ padding: \"10px\", display: \"flex\", alignItems: \"baseline\" }}\r\n      >\r\n        <Button\r\n          style={{\r\n            fontFamily: \"Serif\",\r\n            fontSize: \"15px\",\r\n          }}\r\n          onClick={() => {\r\n            updateTodo(todo);\r\n            setchecked(!checked);\r\n          }}\r\n        >\r\n          Completed\r\n        </Button>\r\n        <Button\r\n          style={{\r\n            fontFamily: \"Serif\",\r\n            fontSize: \"15px\",\r\n          }}\r\n          onClick={() => deleteTodo(todo._id)}\r\n        >\r\n          Delete\r\n        </Button>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Todo;\r\n","import { Button, Grid, Input, Typography } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\n\r\ntype Props = {\r\n  saveTodo: (e: React.FormEvent, formData: ITodo | any) => void;\r\n};\r\n\r\nconst AddTodo: React.FC<Props> = ({ saveTodo }) => {\r\n  const [formData, setFormData] = useState<ITodo | {}>();\r\n\r\n  const handleForm = (e: any): void => {\r\n    setFormData({\r\n      ...formData,\r\n      [e.currentTarget.id]: e.currentTarget.value,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={(e) => saveTodo(e, formData)}>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} style={{ padding: \"10px\", textAlign: \"center\" }}>\r\n          <Typography\r\n            component=\"h1\"\r\n            style={{\r\n              fontWeight: \"bold\",\r\n              fontFamily: \"Serif\",\r\n              fontSize: \"20px\",\r\n            }}\r\n          >\r\n            Todo\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <Typography>Name:</Typography>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <Typography>Description:</Typography>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <Input\r\n            fullWidth\r\n            placeholder=\"Enter Name\"\r\n            type=\"text\"\r\n            id=\"name\"\r\n            required\r\n            onChange={handleForm}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <Input\r\n            fullWidth\r\n            placeholder=\"Enter Description\"\r\n            type=\"text\"\r\n            id=\"description\"\r\n            required\r\n            onChange={handleForm}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Button\r\n            fullWidth\r\n            type=\"submit\"\r\n            variant=\"contained\"\r\n            disabled={formData === undefined ? true : false}\r\n          >\r\n            Add Todo\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default AddTodo;\r\n","import axios, { AxiosResponse } from 'axios'\r\n\r\nconst baseUrl: string = 'http://localhost:4000'\r\n\r\nexport const getTodos = async (): Promise<AxiosResponse<ApiDataType>> => {\r\n  try {\r\n    const todos: AxiosResponse<ApiDataType> = await axios.get(\r\n      baseUrl + '/todos'\r\n    )\r\n    return todos\r\n  } catch (error:string|any) {\r\n    throw new Error(error)\r\n  }\r\n}\r\n\r\nexport const addTodo = async (\r\n  formData: ITodo\r\n): Promise<AxiosResponse<ApiDataType>> => {\r\n  try {\r\n    const todo: Omit<ITodo, '_id'> = {\r\n      name: formData.name,\r\n      description: formData.description,\r\n      status: false,\r\n    }\r\n    const saveTodo: AxiosResponse<ApiDataType> = await axios.post(\r\n      baseUrl + '/add-todo',\r\n      todo\r\n    )\r\n    return saveTodo\r\n  } catch (error:string|any) {\r\n    throw new Error(error)\r\n  }\r\n}\r\n\r\nexport const updateTodo = async (\r\n  todo: ITodo\r\n): Promise<AxiosResponse<ApiDataType>> => {\r\n  try {\r\n    const todoUpdate: Pick<ITodo, 'status'> = {\r\n      status: !todo.status,\r\n    }\r\n    const updatedTodo: AxiosResponse<ApiDataType> = await axios.put(\r\n      `${baseUrl}/edit-todo/${todo._id}`,\r\n      todoUpdate\r\n    )\r\n    return updatedTodo\r\n  } catch (error:string|any) {\r\n    throw new Error(error)\r\n  }\r\n}\r\n\r\nexport const deleteTodo = async (\r\n  _id: string\r\n): Promise<AxiosResponse<ApiDataType>> => {\r\n  try {\r\n    const deletedTodo: AxiosResponse<ApiDataType> = await axios.delete(\r\n      `${baseUrl}/delete-todo/${_id}`\r\n    )\r\n    return deletedTodo\r\n  } catch (error:string|any) {\r\n    throw new Error(error)\r\n  }\r\n}","import React, { useEffect, useState } from \"react\";\nimport TodoItem from \"./components/TodoItem\";\nimport AddTodo from \"./components/AddTodo\";\nimport { getTodos, addTodo, updateTodo, deleteTodo } from \"./API\";\nimport { Container } from \"@material-ui/core\";\n\nconst App: React.FC = () => {\n  const [todos, setTodos] = useState<ITodo[]>([]);\n\n  useEffect(() => {\n    fetchTodos();\n  }, []);\n\n  const fetchTodos = (): void => {\n    getTodos()\n      .then(({ data: { todos } }: ITodo[] | any) => setTodos(todos))\n      .catch((err: Error) => console.log(err));\n  };\n\n  const handleSaveTodo = (e: React.FormEvent, formData: ITodo): void => {\n    e.preventDefault();\n    addTodo(formData)\n      .then(({ status, data }) => {\n        if (status !== 201) {\n          throw new Error(\"Error! Todo not saved\");\n        }\n        setTodos(data.todos);\n      })\n      .catch((err) => console.log(err));\n  };\n\n  const handleUpdateTodo = (todo: ITodo): void => {\n    updateTodo(todo)\n      .then(({ status, data }) => {\n        if (status !== 200) {\n          throw new Error(\"Error! Todo not updated\");\n        }\n        setTodos(data.todos);\n      })\n      .catch((err) => console.log(err));\n  };\n\n  const handleDeleteTodo = (_id: string): void => {\n    deleteTodo(_id)\n      .then(({ status, data }) => {\n        if (status !== 200) {\n          throw new Error(\"Error! Todo not deleted\");\n        }\n        setTodos(data.todos);\n      })\n      .catch((err) => console.log(err));\n  };\n\n  return (\n    <main className=\"App\">\n      <Container\n        maxWidth=\"xs\"\n        style={{\n          position: \"absolute\",\n          top: \"50%\",\n          left: \"50%\",\n          transform: \"translate(-50%,-50%)\",\n          boxShadow: \"0 1rem 2rem rgba(0, 0, 0, 0.2)\",\n          paddingTop: \"20px\",\n          paddingBottom: \"20px\",\n        }}\n      >\n        <AddTodo saveTodo={handleSaveTodo} />\n        {todos.map((todo: ITodo) => (\n          <TodoItem\n            key={todo._id}\n            updateTodo={handleUpdateTodo}\n            deleteTodo={handleDeleteTodo}\n            todo={todo}\n          />\n        ))}\n      </Container>\n    </main>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}